name: DPP-Core

on:
  push:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    outputs:
      release_version: ${{ env.RELEASE_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 21
      - name: Configure Git
        run: |
          git config --global user.email "no-reply@github.com"
          git config --global user.name "Github Actions"
          echo "workflow=$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Build JAR
        env:
          REPO_PUBLIC: ${{ secrets.REPO_PUBLIC }}
          REPO_DPP: ${{ secrets.REPO_DPP }}
        run: ./gradlew jar
      - name: Read version from plugin.yml
        id: yaml-data
        uses: KJ002/read-yaml@main
        with:
          file: './common/build/resources/main/plugin.yml'
          key-path: '["version"]'
      - name: Set RELEASE_VERSION
        run: echo "RELEASE_VERSION=${{ steps.yaml-data.outputs.data }}" >> $GITHUB_ENV
      - name: Create GitHub Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          title: "Release #${{ env.RELEASE_VERSION }}"
          automatic_release_tag: "${{ env.RELEASE_VERSION }}"
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          files: jars/*.jar
          prerelease: false

  publishToHangar:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21
      - name: Publish to Hangar
        env:
          HANGAR_API_TOKEN: ${{ secrets.HANGAR_API_TOKEN }}
          REPO_PUBLIC: ${{ secrets.REPO_PUBLIC }}
          REPO_DPP: ${{ secrets.REPO_DPP }}
        run: |
          chmod +x ./gradlew
          ./gradlew publishPluginPublicationToHangar --stacktrace

  publishToCurseForge:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 21
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Build JAR for CurseForge
        env:
          REPO_PUBLIC: ${{ secrets.REPO_PUBLIC }}
          REPO_DPP: ${{ secrets.REPO_DPP }}
        run: ./gradlew jar
      - name: Upload JARs to CurseForge
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CF_PROJECT_ID: ${{ secrets.CF_PROJECT_ID }}
        run: |
          # Define supported Minecraft versions
          versions=("1.14.4" "1.15.2" "1.16.5" "1.17.1" "1.18.2" "1.19.4" "1.20.1" "1.20.6" "1.21.4" "1.21.5")
          
          # Loop through JAR files in jars folder
          for jar in jars/DPP-Core-*.jar; do
            # Extract Minecraft version from filename
            if [[ $jar =~ DPP-Core-([0-9]+\.[0-9]+\.[0-9]+)-.*\.jar ]]; then
              mc_version="${BASH_REMATCH[1]}"
            elif [[ $jar =~ DPP-Core-([0-9]+\.[0-9]+)-.*\.jar ]]; then
              mc_version="${BASH_REMATCH[1]}"
            else
              continue
            fi
            
            # Check if the Minecraft version is in the supported list
            if [[ " ${versions[@]} " =~ " ${mc_version} " ]]; then
              echo "Uploading $jar for Minecraft $mc_version"
              # Use curl to upload to CurseForge (since itsmeow/curseforge-upload doesn't support dynamic looping)
              curl -X POST \
                -H "X-Api-Token: $CF_API_TOKEN" \
                -F "metadata={\"changelog\": \"Release ${{ needs.build.outputs.release_version }}\", \"changelogType\": \"text\", \"gameVersions\": [\"Minecraft ${mc_version}\", \"Java 21\"], \"releaseType\": \"release\"}" \
                -F "file=@$jar" \
                https://minecraft.curseforge.com/api/projects/$CF_PROJECT_ID/upload-file
            fi
          done
